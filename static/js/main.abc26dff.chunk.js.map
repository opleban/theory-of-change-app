{"version":3,"sources":["components/toc-card.js","components/toc-stage.js","components/toc-board.js","configs/stages.js","configs/pb-board.js","configs/locales.js","App.js","lib/helpers.js","serviceWorker.js","index.js"],"names":["ToCCard","_this$props","this","props","cardText","cardHTML","console","log","react_default","a","createElement","className","dangerouslySetInnerHTML","__html","_this$props2","cardStyle","backgroundColor","cardColor","style","renderCardText","Component","defaultProps","ToCStage","arguments","length","undefined","stageDesc","stageTitle","noHeader","numOfSections","title","sectionId","configName","sectionConfigs","num","ary","i","push","section","cards","filter","card","_this","stageCards","generateLoopArray","map","sectionHeight","getSectionProperty","sectionColor","sectionStyle","minHeight","concat","key","react_responsive_default","maxWidth","getCardsBySection","components_toc_card","Object","assign","minWidth","lib","lg","renderHeader","renderCardsBySection","ToCBoard","stageId","cardStage","stages","src","fluid","stage","getCardsByStage","id","components_toc_stage","configs_stages","SINGULAR","en","es","PLURAL","DESCRIPTION","PROBLEM","STAGES","INPUT","OUTPUT","INTERMEDIATE_OUTCOME","FINAL_OUTCOME","sanFerminConfig","1","height","color","2","3","4","order","locales","AVAILABLE_LOCALES","LocaleConfigs","DEFAULT_LOCALE","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","boardData","file","config","callbackFn","_this2","localizedBoardData","pbBoard","locale","getBoardLocale","location","defaultLocale","availableLocales","localeMatch","pathname","match","RegExp","join","getCurrentLocale","window","setState","Papa","parse","download","header","dynamicTyping","error","err","complete","res","data","_convertBoardDataToBoardObject","components_toc_board","Boolean","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.abc26dff.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../styles/toc-card.css';\n\nclass ToCCard extends Component {\n\n  renderCardText() {\n    const {cardText, cardHTML} = this.props;\n    console.log('CARD', cardHTML);\n    return cardHTML ? \n    (<div className=\"toc-card-html\" \n      dangerouslySetInnerHTML={{__html: cardHTML}}></div>) :\n    (<div className=\"toc-card-text\">{cardText}</div>)\n  }\n\n/**  \ngetCardHeight(props=this.props) {\n  if (['problem', 'final_outcome'].includes(props.cardStage)) {\n\n  }\n}\n **/ \n\n  render() {\n    const {cardText, cardColor} = this.props;\n    const cardStyle = {\n      backgroundColor: cardColor\n    };\n\n    return (\n      <div className=\"toc-card-container\" style={cardStyle}>\n        <div className=\"toc-card\"> \n          <div className=\"toc-card-text\">{this.renderCardText()}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nToCCard.defaultProps = {\n  cardText: \"I'm a card. Please add text to me.\",\n  cardColor: '#2A5ACD'\n};\n\nexport default ToCCard;","import React, { Component } from 'react';\nimport ToCCard from './toc-card';\nimport { Col } from 'react-flexbox-grid';\nimport MediaQuery from 'react-responsive';\nimport '../styles/toc-stage.css'\n\nclass ToCStage extends Component {\n  renderHeader(props=this.props) {\n    const {stageDesc, stageTitle, noHeader, numOfSections} = props;\n\n    return noHeader ?\n      <div/>:\n      <h2 className=\"toc-stage-title\" title={stageDesc}>{stageTitle}</h2>\n  }\n\n  getSectionProperty(sectionId, configName, props=this.props) {\n    return props.sectionConfigs[sectionId][configName];\n  }\n\n  // There must be a better way than this. Makes you miss Ruby\n\n  generateLoopArray(num) {\n    const ary = [];\n    for(let i=0; i<num; i++) {\n      ary.push(i);\n    }\n\n    return ary;\n  }\n\n  getCardsBySection(section, cards){\n    return cards.filter((card) => { return card.section === section; })\n  }\n\n  renderCardsBySection(props=this.props) {\n    const {stageCards, numOfSections, sectionConfigs} = props;\n    const loopAry = this.generateLoopArray(numOfSections); \n    return (\n      loopAry.map((section, i) => {\n        const sectionId = section + 1;\n        const sectionHeight = this.getSectionProperty(sectionId, 'height');\n        const sectionColor = this.getSectionProperty(sectionId, 'color');\n\n        const sectionStyle = {\n          minHeight: `${sectionHeight}px`\n        };\n\n        return (\n          <div key={i}>\n            <MediaQuery maxWidth={991}>\n              <div className=\"toc-stage-section\">\n                {\n                  this.getCardsBySection(sectionId, stageCards).map((card, i) => { \n                    return  <ToCCard cardColor={sectionColor} key={`${i}_mobile`} {...card} />\n                  })\n                }\n              </div>\n            </MediaQuery>\n            <MediaQuery minWidth={992}>\n              <div className=\"toc-stage-section\" style={sectionStyle}>\n                {\n                  this.getCardsBySection(sectionId, stageCards).map((card, i) => { \n                    return <ToCCard key={`${i}_normal`} cardColor={sectionColor} {...card} />\n                  })\n                }\n              </div>\n            </MediaQuery>\n          </div>\n        );\n      })\n    );\n  }\n\n  render() {\n    return (\n      <Col lg>\n        <div className=\"toc-stage-container\"> \n          {this.renderHeader()}\n          {this.renderCardsBySection()}\n        </div>\n      </Col>\n    )\n  }\n}\n\nToCStage.defaultProps = {\n  stageCards: []\n};\n\nexport default ToCStage;","import React, { Component } from 'react';\nimport ToCStage from './toc-stage';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport '../styles/toc-board.scss';\n\nclass ToCBoard extends Component {\n  getCardsByStage(stageId, cards) {\n    return cards.filter((card) => { return card.cardStage === stageId; })\n  }\n\n  render() {\n    const { title, stages, cards, numOfSections, sectionConfigs } = this.props;\n    return (\n      <div className=\"toc-board-container\">\n        <div className=\"toc-board-title-wrapper\">\n          <div className=\"toc-board-title-container\">\n            <h1 className=\"toc-board-title\">{title}</h1>\n            <img src=\"assets/Humaaans/sitting-3.png\" />\n            </div>\n        </div>\n        <div className=\"toc-stages-container\">\n          <Grid fluid>\n            <Row> \n            {\n              stages.map((stage, i) => {\n                const stageCards = this.getCardsByStage(stage.id, cards)\n                return ( <ToCStage key={i} \n                                   sectionConfigs={sectionConfigs} \n                                   numOfSections={numOfSections} \n                                   stageCards={stageCards} {...stage} />)\n              })\n            }\n            </Row>\n          </Grid>\n        </div>\n      </div>\n    );\n  }\n}\n\nToCBoard.defaultProps = {\n  title: '',\n  stages: [],\n  cards: [],\n  numOfSections: 1,\n  sectionConfigs: {}\n};\n\nexport default ToCBoard;\n","export default {\n  PROBLEM: {\n    id: 'problem',\n    SINGULAR: {\n      en: 'Problem',\n      es: 'Problema/Necesidad'\n    },\n    PLURAL: {\n      en: 'Problems',\n      es: 'Problemas'\n    },\n    DESCRIPTION: {\n      en: 'I got 99 problems...',\n      es: 'I got 99 problemas...'\n    }\n  },\n  INPUT: {\n    id: 'input',\n    SINGULAR: {\n      en: 'Inputs/Activitys',\n      es: 'Insumos/Actividades'\n    },\n    PLURAL: {\n      en: 'Inputs/Activities',\n      es: 'Insumos/Actividades'\n    },\n    DESCRIPTION: {\n      en: 'Insert coin here.',\n      es: 'Insert euro here.'\n    }\n  },\n  OUTPUT: {\n    id: 'output',\n    SINGULAR: {\n      en: 'Output',\n      es: 'Producto'\n    },\n    PLURAL: {\n      en:'Outputs',\n      es: 'Productos'\n    },\n    DESCRIPTION: {\n      en: 'Point this way forward.',\n      es: 'Point this way Castellano'\n    }\n  },\n  INTERMEDIATE_OUTCOME: {\n    id: 'int_outcome',\n    SINGULAR: {\n      en: 'Intermediate Outcome',\n      es: 'Resultado Intermedio'\n    },\n    PLURAL: {\n      en: 'Intermediate Outcomes',\n      es: 'Resultados intermedios'\n    },\n    DESCRIPTION: {\n      en: 'Short-term gain.',\n      es: 'Short-term gain.'\n    }\n  },\n  FINAL_OUTCOME: {\n    id: 'final_outcome',\n    SINGULAR: {\n      en: 'Final Outcome',\n      es: 'Resultado Final'\n    },\n    PLURAL: {\n      en: 'Final Outcomes',\n      es: 'Resultados Finales'\n    },\n    DESCRIPTION: {\n      en: 'Long-term profit.',\n      es: 'Long-term profit. ES'\n    }\n  }\n};","import STAGES from './stages.js';\nimport Papa from 'papaparse';\n\nconst  { PROBLEM, INPUT, OUTPUT, \n         INTERMEDIATE_OUTCOME, FINAL_OUTCOME } = STAGES;\n\n\n/**\nUGH I HATE THIS, BUT SUCH IS LIFE, I'M NOT CLEVER ENOUGH \nYET TO FIGURE OUT HOW TO HANDLE THIS BETTER. THIS IS SUPER \nTIGHTLY COUPLED THE STRUCTURE OF BOARD CONFIGURATION. \nNEEDS TO RETURN THIS:\n{\n  title: 'A TITLE'\n  cards: [{\n    cardStage: STRING,\n    cartText: STRING\n  },...],\n  stages: [{\n    order: INT,\n    stageTitle: STRING\"\n  },...]\n}\n**/\n\nexport function loadBoardData(file, config, callbackFn) {\n  if (!file) { console.log(\"WHERE'S THE FILE\"); }\n  return Papa.parse(file, { \n    download: true, \n    header:true,\n    dynamicTyping: true,\n    error: (err) => {\n      console.log('THERE WAS AN ERROR');\n    },\n    complete: (res, file) => {\n      const data = _convertBoardDataToBoardObject(res.data, config);\n      return callbackFn(data);\n    }\n  });\n}\n\nfunction _convertBoardDataToBoardObject(data, config) {\n  config.cards = \n    data.map((card) => {\n      return {\n        cardStage: card['Card Stage'],\n        cardText: {\n          en: card['Card Text EN'] || '',\n          es: card['Card Text ES'] || ''\n        },\n        cardHTML: {\n          en: card['Card HTML EN'] || '',\n          es: card['Card HTML ES'] || ''\n        },\n        section: card['Section']\n      }\n    });\n  return config;\n}\n\n\nexport function getBoardLocale(pbBoard, locale='en') {\n  const { sectionConfigs, title, cards, stages, numOfSections } = pbBoard;\n  return {\n    numOfSections,\n    sectionConfigs,\n    title: title[locale],\n    cards: cards.map((card) => {\n      const {cardStage, cardText, cardHTML, section } = card;\n      return { cardStage,\n               cardText: cardText[locale],\n               cardHTML: (cardHTML||{})[locale],\n               section };\n    }),\n    stages: stages.map((stage) => {\n      const { order, id, stageTitle, stageDesc } = stage;\n      return {\n        order,\n        id,\n        stageTitle: stageTitle[locale],\n        stageDesc: stageDesc[locale]\n      }\n    })\n\n  }\n}\n\nexport const sanFerminConfig = {\n  title: {\n    en: 'San Fermin Library - Co-Creation',\n    es: 'Biblioteca de San Fermin - Co-Creación'\n  },\n  numOfSections: 4,\n  style: 'default',\n  sectionConfigs: {\n    1: {\n      height: 180,\n      color: 'rgba(38, 86, 208, 1)'\n    },\n    2: {\n      height: 125,\n      color: 'rgba(238, 132, 52, 1)'\n    },\n    3: {\n      height: 295,\n      color: 'rgba(201, 93, 99, 1)'\n    },\n    4: {\n      height: 150,\n      color: 'rgba(113, 126, 195, 1)'\n    }\n  },\n  stages: [\n    {\n      order: 1,\n      id: PROBLEM.id,\n      stageTitle: {\n        en: PROBLEM.SINGULAR.en,\n        es: PROBLEM.SINGULAR.es\n      },\n      stageDesc: {\n        en: PROBLEM.DESCRIPTION.en,\n        es: PROBLEM.DESCRIPTION.es\n      }\n    },\n    {\n      order: 2,\n      id: INPUT.id,\n      stageTitle: {\n        en: INPUT.PLURAL.en,\n        es: INPUT.PLURAL.es\n      },\n      stageDesc: {\n        en: INPUT.DESCRIPTION.en,\n        es: INPUT.DESCRIPTION.es\n      }\n    },\n    {\n      order: 3,\n      id: OUTPUT.id,\n      stageTitle: {\n        en: OUTPUT.PLURAL.en,\n        es: OUTPUT.PLURAL.es\n      },\n      stageDesc: {\n        en: OUTPUT.DESCRIPTION.en,\n        es: OUTPUT.DESCRIPTION.es\n      }\n    },\n    {\n      order: 4,\n      id: INTERMEDIATE_OUTCOME.id,\n      stageTitle: {\n        en: INTERMEDIATE_OUTCOME.PLURAL.en,\n        es: INTERMEDIATE_OUTCOME.PLURAL.es,\n      },\n      stageDesc: {\n        en: INTERMEDIATE_OUTCOME.DESCRIPTION.en,\n        es: INTERMEDIATE_OUTCOME.DESCRIPTION.es\n      }\n    },\n    { order: 5,\n      id: FINAL_OUTCOME.id,\n      stageTitle: {\n        en: FINAL_OUTCOME.SINGULAR.en,\n        es: FINAL_OUTCOME.SINGULAR.es\n      },\n      stageDesc: {\n        en: FINAL_OUTCOME.DESCRIPTION.en,\n        es: FINAL_OUTCOME.DESCRIPTION.es\n      }\n    }\n  ]\n};\n\n// export default {\n//   title: {\n//     en: 'San Fermin Library - Co-Creation',\n//     es: 'Biblioteca de San Fermin - Co-Creación'\n//   },\n//   numOfSections: 4,\n//   style: 'default',\n//   sectionConfigs: {\n//     1: {\n//       height: 180,\n//       color: 'rgba(38, 86, 208, 1)'\n//     },\n//     2: {\n//       height: 125,\n//       color: 'rgba(238, 132, 52, 1)'\n//     },\n//     3: {\n//       height: 295,\n//       color: 'rgba(201, 93, 99, 1)'\n//     },\n//     4: {\n//       height: 150,\n//       color: 'rgba(113, 126, 195, 1)'\n//     }\n//   },\n//   cards: [\n//     {\n//       cardStage: PROBLEM.id,\n//       cardText: {\n//         en: 'Policy in San Fermin does not reflect local knowledge (municipal officials lack knowledge of citizens needs and preferences)',\n//         es: 'Política local no incorpora el conocimiento local de los vecinos sobre sus necesidades y preferencias  (conocimiento que reside en la ciudadanía no es la administración)'\n//       },\n//       section: 1\n//     },\n//      {\n//       cardStage: INPUT.id,\n//       cardText: {\n//         en: 'Constitute the Steering Committee',\n//         es: 'Constitución del Grupo Motor'\n//       },\n//       section: 1\n//     },\n//     {\n//       cardStage: INPUT.id,\n//       cardText: {\n//         en: 'Steering Committee identifes key stakeholders with local knowledge.',\n//         es: 'Grupo Motor identifica actores relevantes con conocimiento local'\n//       },\n//       section: 1\n//     },\n//     {\n//       cardStage: INPUT.id,\n//       cardText: {\n//         en: 'Steering Committee develops questionnaire for needs assesment and ran survey',\n//         es: 'Grupo Motor desarrolla cuestionario de diagnóstico de necesidades'\n//       },\n//       section: 2\n//     },\n//     {\n//       cardStage: INPUT.id,\n//       cardHTML: {\n//         en: '<ul>Citizens provide ideas in co-creation workshops with:<li>Children</li><li>Youth</li><li>Organized and not organized neighbors</li></ul>',\n//         es: '<ul>Vecinos proveen sus ideas en talleres de co-creación con:<li>Niños</li><li>Jóvenes</li><li>Vecinos organizados y no organizados</li></ul>'\n//       },\n//       cardText: {\n//         en: 'Citizens provide ideas in co-creation workshops',\n//         es: 'Citizens provide ideas in co-creation workshops Castellano'\n//       },\n//       section: 3\n//     },\n//     {\n//       cardStage: INPUT.id,\n//       cardText: {\n//         en: 'Dinamizadores facilitate the process',\n//         es: 'Dinamizadores moderan el proceso'\n//       },\n//       section: 3\n//     },\n//     {\n//       cardStage: INPUT.id,\n//       cardText: {\n//         en: 'Technical profile staff/participants translate ideas into design',\n//         es: 'Personal técnico traduce ideas a diseño'\n//       },\n//       section: 3\n//     },\n//     {\n//       cardStage: INPUT.id,\n//       cardText: {\n//         en: 'Conduct outreach and provide information on the process',\n//         es: 'Administración y Grupo Motor difunden y proveen información sobre el proceso'\n//       },\n//       section: 4\n//     },\n//     {\n//       cardStage: OUTPUT.id,\n//       cardText: {\n//         en: 'Steering Committee is constituted',\n//         es: 'Grupo Motor constituido'\n//       },\n//       section: 1\n//     },\n//     {\n//       cardStage: OUTPUT.id,\n//       cardText: {\n//         en: 'Map of relevant stakeholders',\n//         es: 'Mapeo de actores'\n//       },\n//       section: 1\n//     },\n//     {\n//       cardStage: OUTPUT.id,\n//       cardText: {\n//         en: 'Needs assesment developed',\n//         es: 'Diagnóstico complete'\n//       },\n//       section: 2\n//     },\n//     {\n//       cardStage: OUTPUT.id,\n//       cardText: {\n//         en: 'Workshops & co-creation activties conducted',\n//         es: 'Talleres y actividades de co-creación implentadas'\n//       },\n//       section: 3\n//     },\n//     {\n//       cardStage: OUTPUT.id,\n//       cardText: {\n//         en: 'Citizens’ ideas collected',\n//         es: 'Ideas de los vecinos recogidas'\n//       },\n//       section: 3\n//     },\n//     {\n//       cardStage: OUTPUT.id,\n//       cardText: {\n//         en: 'Ideas systematized and translated into a design',\n//         es: 'Ideas sistematizadas y traducidas a diseño técnico'\n//       },\n//       section: 3\n//     },\n//     {\n//       cardStage: OUTPUT.id,\n//       cardText: {\n//         en: 'Information disseminated',\n//         es: 'Información difundida'\n//       },\n//       section: 4\n//     },\n//     {\n//       cardStage: INTERMEDIATE_OUTCOME.id,\n//       cardText: {\n//         en: 'Continued Committment',\n//         es: 'Compromiso continuado'\n//       },\n//       section: 1\n//     },\n//     {\n//       cardStage: INTERMEDIATE_OUTCOME.id,\n//       cardText: {\n//         en: 'Steering Committee knows the reality of the neighborhood',\n//         es: 'Grupo Motor conoce realidad del barrio'\n//       },\n//       section: 1\n//     },\n//     {\n//       cardStage: INTERMEDIATE_OUTCOME.id,\n//       cardText: {\n//         en: 'Stakeholders map represents neighborhood',\n//         es: 'Mapeo de actores es representativo del vecindario'\n//       },\n//       section: 1\n//     },\n//     {\n//       cardStage: INTERMEDIATE_OUTCOME.id,\n//       cardText: {\n//         en: 'Citizens partcipate in needs assesment',\n//         es: 'Vecinos participan del diagnóstico'\n//       },\n//       section: 2\n//     },\n//     {\n//       cardStage: INTERMEDIATE_OUTCOME.id,\n//       cardText: {\n//         en: 'Needs assessment accurately captures needs',\n//         es: 'Diagnóstico recoge con fidelidad las necesidades'\n//       },\n//       section: 2\n//     },\n//     {\n//       cardStage: INTERMEDIATE_OUTCOME.id,\n//       cardText: {\n//         en: 'Workshop participants are representative of target population',\n//         es: 'Participantes en los talleres son representativos de los vecinos'\n//       },\n//       section: 3\n//     },\n//     {\n//       cardStage: INTERMEDIATE_OUTCOME.id,\n//       cardText: {\n//         en: 'Quality of facilitation',\n//         es: 'Calidad de la moderación'\n//       },\n//       section: 3\n//     },\n//     {\n//       cardStage: INTERMEDIATE_OUTCOME.id,\n//       cardText: {\n//         en: 'Originality of solutions',\n//         es: 'Originalidad de las soluciones'\n//       },\n//       section: 3\n//     },\n//     {\n//       cardStage: INTERMEDIATE_OUTCOME.id,\n//       cardText: {\n//         en: 'Feasibility of solutions',\n//         es: 'Factibilidad de las soluciones'\n//       },\n//       section: 3\n//     },\n//     {\n//       cardStage: INTERMEDIATE_OUTCOME.id,\n//       cardText: {\n//         en: 'End-user value of solutions',\n//         es: 'Valor para el usuario de las soluciones'\n//       },\n//       section: 3\n//     },\n//     {\n//       cardStage: INTERMEDIATE_OUTCOME.id,\n//       cardText: {\n//         en: 'Neighbors are informed about the process',\n//         es: 'Vecinos informados sobre el proceso'\n//       },\n//       section: 4\n//     },\n//     {\n//       cardStage: INTERMEDIATE_OUTCOME.id,\n//       cardText: {\n//         en: 'Influence and credibility',\n//         es: 'Influencia y credibilidad'\n//       },\n//       section: 4\n//     },\n//     {\n//       cardStage: FINAL_OUTCOME.id,\n//       cardText: {\n//         en: 'Policy reflects local knowledge, needs, and preferences',\n//         es: 'Política local incorpora el conocimiento local de los vecinos sobre sus necesidades y preferencias  (conocimiento que reside en la ciudadanía no es la administración)'\n//       },\n//       section: 1\n//     }\n//   ],\n  // stages: [\n  //   {\n  //     order: 1,\n  //     id: PROBLEM.id,\n  //     stageTitle: {\n  //       en: PROBLEM.SINGULAR.en,\n  //       es: PROBLEM.SINGULAR.es\n  //     },\n  //     stageDesc: {\n  //       en: PROBLEM.DESCRIPTION.en,\n  //       es: PROBLEM.DESCRIPTION.es\n  //     }\n  //   },\n  //   {\n  //     order: 2,\n  //     id: INPUT.id,\n  //     stageTitle: {\n  //       en: INPUT.PLURAL.en,\n  //       es: INPUT.PLURAL.es\n  //     },\n  //     stageDesc: {\n  //       en: INPUT.DESCRIPTION.en,\n  //       es: INPUT.DESCRIPTION.es\n  //     }\n  //   },\n  //   {\n  //     order: 3,\n  //     id: OUTPUT.id,\n  //     stageTitle: {\n  //       en: OUTPUT.PLURAL.en,\n  //       es: OUTPUT.PLURAL.es\n  //     },\n  //     stageDesc: {\n  //       en: OUTPUT.DESCRIPTION.en,\n  //       es: OUTPUT.DESCRIPTION.es\n  //     }\n  //   },\n  //   {\n  //     order: 4,\n  //     id: INTERMEDIATE_OUTCOME.id,\n  //     stageTitle: {\n  //       en: INTERMEDIATE_OUTCOME.PLURAL.en,\n  //       es: INTERMEDIATE_OUTCOME.PLURAL.es,\n  //     },\n  //     stageDesc: {\n  //       en: INTERMEDIATE_OUTCOME.DESCRIPTION.en,\n  //       es: INTERMEDIATE_OUTCOME.DESCRIPTION.es\n  //     }\n  //   },\n  //   { order: 5,\n  //     id: FINAL_OUTCOME.id,\n  //     stageTitle: {\n  //       en: FINAL_OUTCOME.SINGULAR.en,\n  //       es: FINAL_OUTCOME.SINGULAR.es\n  //     },\n  //     stageDesc: {\n  //       en: FINAL_OUTCOME.DESCRIPTION.en,\n  //       es: FINAL_OUTCOME.DESCRIPTION.es\n  //     }\n  //   }\n//   ]\n// };","export default {\n  AVAILABLE_LOCALES: ['es', 'en'],\n  DEFAULT_LOCALE: ['en']\n}","import React, { Component } from 'react';\nimport ToCBoard from './components/toc-board';\nimport {loadBoardData, getBoardLocale, sanFerminConfig} from './configs/pb-board';\nimport {getCurrentLocale} from './lib/helpers';\nimport LocaleConfigs from './configs/locales.js';\nimport 'normalize.css';\nimport './styles/styles.css';\n\nconst {AVAILABLE_LOCALES, DEFAULT_LOCALE} = LocaleConfigs;\n\nclass App extends Component {\n  constructor(props){ \n    super(props);\n    this.state = { boardData: {} };\n  }\n\n  componentDidMount() {\n    const boardReq = loadBoardData('data/san_fermin_data.csv', sanFerminConfig, (boardData)=> {\n      console.log(boardData);\n      const currentLocale = getCurrentLocale(window.location, DEFAULT_LOCALE, AVAILABLE_LOCALES);\n      const localizedBoardData = getBoardLocale(boardData, currentLocale);\n      console.log(localizedBoardData);\n      this.setState({\n        boardData: localizedBoardData\n      });\n    });\n  }\n\n  render() {\n    const {boardData} = this.state;\n\n    return (\n      <div className=\"App\">\n        <ToCBoard {...boardData} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export function getCurrentLocale(location, defaultLocale, availableLocales) {\n  const localeMatch = location.pathname.match(\n    RegExp('\\/(' + availableLocales.join('|') + ')')\n  );\n  return localeMatch ?\n    localeMatch[1] :\n    defaultLocale;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}